{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","hasError","setHasError","selectedMovie","setSelectedMovie","searchQuery","setSearchQuery","isLoading","setIsLoading","errorMessage","setErrorMessage","handleQueryChange","useCallback","value","handleAdd","handleSubmit","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","receivedMovie","Poster","Title","Plot","imdbID","newMovie","onSubmit","htmlFor","type","id","placeholder","onChange","currentTarget","cn","disabled","onClick","App","setMovies","prevMovies","some","ReactDOM","render","document","getElementById"],"mappings":"+TAQaA,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,6CCHnB,IAEaC,EAAuB,SAAC,GAE9B,IADLC,EACI,EADJA,MAEA,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,mBAAuB,MAAjE,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEMC,EAAoBC,uBAAY,SAACC,GACrCP,EAAeO,GAEXA,GACFX,GAAY,KAEb,IAEGY,EAAYF,uBAAY,WACxBT,IACFJ,EAAMI,GACNC,EAAiB,MACjBE,EAAe,OAEhB,CAACH,IAEEY,EAAeH,sBAAW,uCAAC,WAAOI,GAAP,yBAAAC,EAAA,6DAE/BD,EAAME,iBACNV,GAAa,GAHkB,kBCjCVW,EDuCkBd,ECtClCe,MAAM,GAAD,OAHE,2CAGF,cAAiBD,IAC1BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBD4BsB,YAQzB,UAFEC,EANuB,iCAS3BzB,GAAY,GACZQ,EAAgB,wCAVW,2BAgB3BkB,EAIED,EAJFC,OACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,KACAC,EACEJ,EADFI,OAOIC,EAAkB,CACtB1C,MAAOuC,EACPtC,YAAauC,EACb1C,OAP6B,QAAXwC,EAChBA,EAlDS,4DAyDXnC,QAAQ,8BAAD,OAAgCsC,GACvClC,OAAQkC,GAGV3B,EAAiB4B,GAlCY,yBAoC7BxB,GAAa,GApCgB,+CCjC5B,IAAkBW,IDiCU,yBAAD,sDAsC7B,IAEH,OACE,qCACE,uBACEjC,UAAU,aACV+C,SAAUlB,EAFZ,UAIE,sBAAK7B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQgD,QAAQ,cAAjC,yBAIA,qBAAKhD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRiD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnD,UAAU,kBACV2B,MAAOR,EACPiC,SAAU,SAACtB,GAAD,OAAWL,EAAkBK,EAAMuB,cAAc1B,YAI9DZ,GACC,mBAAGf,UAAU,iBAAiB,UAAQ,eAAtC,SACGuB,OAKP,sBAAKvB,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRiD,KAAK,SACLjD,UAAWsD,IAAG,SAAU,WAAY,CAClC,aAAcjC,IAEhBkC,UAAWpC,EANb,SAQIF,EAEE,eADA,mBAKPA,GACC,qBAAKjB,UAAU,UAAf,SACE,wBACE,UAAQ,YACRiD,KAAK,SACLjD,UAAU,oBACVwD,QAAS5B,EAJX,qCAaPX,GACC,sBAAKjB,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOkB,WExIfwC,EAAM,WACjB,MAA4B3C,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeiD,EAAf,KAeA,OACE,sBAAK1D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWa,MApBM,SAACiC,GAClBA,GACFY,GAAU,SAAAC,GAIR,OAHyBA,EACtBC,MAAK,qBAAGjD,SAAwBmC,EAASnC,UAGxCgD,EADmB,sBAEfA,GAFe,CAEHb,gBCb5Be,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.82dd382f.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { FC, useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  onAdd: (newMovie: Movie) => void;\n}\n\nconst baseImgUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const FindMovie: FC<Props> = ({\n  onAdd,\n}) => {\n  const [hasError, setHasError] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState<Movie | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleQueryChange = useCallback((value: string) => {\n    setSearchQuery(value);\n\n    if (value) {\n      setHasError(false);\n    }\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    if (selectedMovie) {\n      onAdd(selectedMovie);\n      setSelectedMovie(null);\n      setSearchQuery('');\n    }\n  }, [selectedMovie]);\n\n  const handleSubmit = useCallback(async (event:\n  React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const receivedMovie = await getMovie(searchQuery);\n\n      if ('Error' in receivedMovie) {\n        setHasError(true);\n        setErrorMessage('Can\\'t find a movie with such a title');\n\n        return;\n      }\n\n      const {\n        Poster,\n        Title,\n        Plot,\n        imdbID,\n      } = receivedMovie;\n\n      const imgMovieUrl = Poster !== 'N/A'\n        ? Poster\n        : baseImgUrl;\n\n      const newMovie: Movie = {\n        title: Title,\n        description: Plot,\n        imgUrl: imgMovieUrl,\n        imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n        imdbId: imdbID,\n      };\n\n      setSelectedMovie(newMovie);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchQuery}\n              onChange={(event) => handleQueryChange(event.currentTarget.value)}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!searchQuery}\n            >\n              {!selectedMovie\n                ? 'Find a movie'\n                : 'Search again'}\n            </button>\n          </div>\n\n          {selectedMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {selectedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={selectedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=6907443f';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (newMovie) {\n      setMovies(prevMovies => {\n        const isMovieInTheList = prevMovies\n          .some(({ imdbId }) => imdbId === newMovie.imdbId);\n\n        return isMovieInTheList\n          ? prevMovies\n          : [...prevMovies, newMovie];\n      });\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}